{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(i) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Board() {\n  const status = 'Next player: X';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(0), Square(1), Square(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(3), Square(4), Square(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(6), Square(7), Square(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Board;\n\nfunction Game() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Game;\n\nfunction NNParams() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NNParams\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"weights\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Bias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Weights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class X Wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: window.pyodide.globals.WEIGHTS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class Y Wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = NNParams;\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nfunction App() {\n  _s();\n\n  const [console, setConsole] = useState('Initializing Python 3.8\\n');\n  const [pythonLoaded, setPythonLoaded] = useState(false); //Initialize Python\n\n  useEffect(() => {\n    if (!pythonLoaded) {\n      window.languagePluginLoader.then(() => {\n        setPythonLoaded(true);\n        setConsole(c => c + 'Python Loaded!\\n'); //load NeuralNet.py Scripts\n\n        loadNeuralNetScripts().then(() => {\n          setConsole(c => c + 'Neural Net Scripts Loaded!\\n');\n        }).catch(err => setConsole(c => c + err + '\\n'));\n      });\n    }\n  }, [pythonLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"python-console\",\n      children: console\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NNParams, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n} // ========================================\n\n\n_s(App, \"fG7WRSJOHdC/IBh8+nBKtaWVLFo=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"NNParams\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","Square","i","Board","status","Game","NNParams","window","pyodide","globals","WEIGHTS","loadNeuralNetScripts","response","fetch","mlcode","text","runPythonAsync","App","console","setConsole","pythonLoaded","setPythonLoaded","languagePluginLoader","then","c","catch","err"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\ndeclare global {\n\n  interface pythonVars {\n    WEIGHTS: Array<Number>\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\nfunction Square(i: number) {\n  return (\n    <button className=\"square\">\n      {/* TODO */}\n    </button>\n  );\n}\n\nfunction Board() {\n  const status = 'Next player: X';\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {Square(0)}\n        {Square(1)}\n        {Square(2)}\n      </div>\n      <div className=\"board-row\">\n        {Square(3)}\n        {Square(4)}\n        {Square(5)}\n      </div>\n      <div className=\"board-row\">\n        {Square(6)}\n        {Square(7)}\n        {Square(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction Game(){\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction NNParams(){\n\n  return (\n    <div className='NNParams'>\n    <table className=\"weights\">\n      <tr><th></th><th>Bias</th><th>Weights</th></tr>\n      <tr><th>Class X Wins</th><td>{window.pyodide.globals.WEIGHTS}</td></tr>\n      <tr><th>Class Y Wins</th></tr>\n      <tr><th>Class Draw</th></tr>\n    </table>\n  </div>\n  )\n\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded!\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded!\\n')\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }\n    }, [pythonLoaded])\n\n\n\n  return (\n    <div className=\"App\">        \n        <div className='python-console'>{console}</div>\n        <Game />\n        <NNParams />\n    </div>\n  \n  )\n}\n\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}