{"ast":null,"code":"import _regeneratorRuntime from\"/Users/alexanderackerman/Code/TicTacToeNeuralNet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/alexanderackerman/Code/TicTacToeNeuralNet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/alexanderackerman/Code/TicTacToeNeuralNet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import'./App.css';import React,{useState,useEffect}from'react';/* React code below based on https://reactjs.org/tutorial/tutorial.html */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Square(i){return/*#__PURE__*/_jsx(\"button\",{className:\"square\"});}function Board(){var status='Next player: X';return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"status\",children:status}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[Square(0),Square(1),Square(2)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[Square(3),Square(4),Square(5)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"board-row\",children:[Square(6),Square(7),Square(8)]})]});}function Game(){return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:/*#__PURE__*/_jsx(Board,{})}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"ol\",{})]})]});}function Table(_ref){var data=_ref.data;var dec=4;if(data){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Class X Wins\"}),data[0].map(function(x){return x.toFixed(dec);})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Class Y Wins\"}),data[1].map(function(x){return x.toFixed(dec);})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Class Draw\"}),data[2].map(function(x){return x.toFixed(dec);})]})]})});}else{return/*#__PURE__*/_jsx(\"div\",{});}}function loadNeuralNetScripts(){return _loadNeuralNetScripts.apply(this,arguments);}function _loadNeuralNetScripts(){_loadNeuralNetScripts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,mlcode;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('./NeuralNet.py');case 2:response=_context.sent;_context.next=5;return response.text();case 5:mlcode=_context.sent;window.pyodide.runPythonAsync(mlcode);case 7:case\"end\":return _context.stop();}}},_callee);}));return _loadNeuralNetScripts.apply(this,arguments);}function App(){var _useState=useState('Initializing Python 3.8\\n'),_useState2=_slicedToArray(_useState,2),console=_useState2[0],setConsole=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pythonLoaded=_useState4[0],setPythonLoaded=_useState4[1];var _useState5=useState([[],[],[]]),_useState6=_slicedToArray(_useState5,2),weights=_useState6[0],setWeights=_useState6[1];//Initialize Python\nuseEffect(function(){if(!pythonLoaded){window.languagePluginLoader.then(function(){setPythonLoaded(true);setConsole(function(c){return c+'Python Loaded!\\n';});//load NeuralNet.py Scripts\nloadNeuralNetScripts().then(function(){setConsole(function(c){return c+'Neural Net Scripts Loaded!\\n';});setWeights(window.pyodide.globals.WEIGHTS);}).catch(function(err){return setConsole(function(c){return c+err+'\\n';});});});}else{// update values?\nsetWeights(window.pyodide.globals.WEIGHTS);}},[pythonLoaded,weights]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"python-console\",children:console}),/*#__PURE__*/_jsx(Game,{}),/*#__PURE__*/_jsx(Table,{data:weights})]});}// ========================================\nexport default App;","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","Square","i","Board","status","Game","Table","data","dec","map","x","toFixed","loadNeuralNetScripts","fetch","response","text","mlcode","window","pyodide","runPythonAsync","App","console","setConsole","pythonLoaded","setPythonLoaded","weights","setWeights","languagePluginLoader","then","c","globals","WEIGHTS","catch","err"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\ndeclare global {\n\n  interface pythonVars {\n    WEIGHTS: Array<Array<number>>\n    BIASES: Array<number>\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\nfunction Square(i: number) {\n  return (\n    <button className=\"square\">\n      {/* TODO */}\n    </button>\n  );\n}\n\nfunction Board() {\n  const status = 'Next player: X';\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {Square(0)}\n        {Square(1)}\n        {Square(2)}\n      </div>\n      <div className=\"board-row\">\n        {Square(3)}\n        {Square(4)}\n        {Square(5)}\n      </div>\n      <div className=\"board-row\">\n        {Square(6)}\n        {Square(7)}\n        {Square(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction Game(){\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\n\ntype tableProps = {\n  data: Array<Array<number>>\n}\n\nfunction Table({data} : tableProps) {\n  const dec = 4\n  if (data) {\n    return (\n      <div>\n      <table>\n        <tr><th>Class X Wins</th>{data[0].map(x => x.toFixed(dec))}</tr>\n        <tr><th>Class Y Wins</th>{data[1].map(x => x.toFixed(dec))}</tr>\n        <tr><th>Class Draw</th>{data[2].map(x => x.toFixed(dec))}</tr>\n      </table>\n    </div>\n    )\n  } else {\n    return <div></div>\n  }\n\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n  const [weights, setWeights] = useState([[],[],[]] as Array<Array<number>>)\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded!\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded!\\n')\n            setWeights(window.pyodide.globals.WEIGHTS)\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }  else {\n        // update values?\n        setWeights(window.pyodide.globals.WEIGHTS)\n      }\n    }, [pythonLoaded, weights])\n\n\n  return (\n    <div className=\"App\">        \n        <div className='python-console'>{console}</div>\n        <Game />\n        <Table data={weights}/>\n    </div>\n  \n  )\n}\n\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}