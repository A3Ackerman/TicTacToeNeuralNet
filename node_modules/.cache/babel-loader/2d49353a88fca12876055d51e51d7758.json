{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(i) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Board() {\n  const status = 'Next player: X';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(0), Square(1), Square(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(3), Square(4), Square(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(6), Square(7), Square(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Board;\n\nfunction Game() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Game;\n\nfunction Table(data) {\n  const dec = 4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class X Wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), data[0].map(x => x.toFixed(dec))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class Y Wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), data[1].map(x => x.toFixed(dec))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Class Draw\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), data[2].map(x => x.toFixed(dec))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Table;\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nfunction App() {\n  _s();\n\n  const [console, setConsole] = useState('Initializing Python 3.8\\n');\n  const [pythonLoaded, setPythonLoaded] = useState(false);\n  const [weights, setWeights] = useState([[], [], []]); //Initialize Python\n\n  useEffect(() => {\n    if (!pythonLoaded) {\n      window.languagePluginLoader.then(() => {\n        setPythonLoaded(true);\n        setConsole(c => c + 'Python Loaded!\\n'); //load NeuralNet.py Scripts\n\n        loadNeuralNetScripts().then(() => {\n          setConsole(c => c + 'Neural Net Scripts Loaded!\\n');\n          setWeights(window.pyodide.globals.WEIGHTS);\n        }).catch(err => setConsole(c => c + err + '\\n'));\n      });\n    }\n  }, [pythonLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"python-console\",\n      children: console\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), Table(weights)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n} // ========================================\n\n\n_s(App, \"cqBTr4mcXDh/C2b4hOggKsDQr+k=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"Table\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","Square","i","Board","status","Game","Table","data","dec","map","x","toFixed","loadNeuralNetScripts","response","fetch","mlcode","text","window","pyodide","runPythonAsync","App","console","setConsole","pythonLoaded","setPythonLoaded","weights","setWeights","languagePluginLoader","then","c","globals","WEIGHTS","catch","err"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\ndeclare global {\n\n  interface pythonVars {\n    WEIGHTS: Array<Array<number>>\n    BIASES: Array<number>\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\nfunction Square(i: number) {\n  return (\n    <button className=\"square\">\n      {/* TODO */}\n    </button>\n  );\n}\n\nfunction Board() {\n  const status = 'Next player: X';\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {Square(0)}\n        {Square(1)}\n        {Square(2)}\n      </div>\n      <div className=\"board-row\">\n        {Square(3)}\n        {Square(4)}\n        {Square(5)}\n      </div>\n      <div className=\"board-row\">\n        {Square(6)}\n        {Square(7)}\n        {Square(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction Game(){\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\n\n\nfunction Table(data : Array<Array<number>>) {\n  const dec = 4\n\n  return (\n    <div>\n    <table>\n      <tr><th>Class X Wins</th>{data[0].map(x => x.toFixed(dec))}</tr>\n      <tr><th>Class Y Wins</th>{data[1].map(x => x.toFixed(dec))}</tr>\n      <tr><th>Class Draw</th>{data[2].map(x => x.toFixed(dec))}</tr>\n    </table>\n  </div>\n  )\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n  const [weights, setWeights] = useState([[],[],[]] as Array<Array<number>>)\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded!\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded!\\n')\n            setWeights(window.pyodide.globals.WEIGHTS)\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }\n    }, [pythonLoaded])\n\n\n  return (\n    <div className=\"App\">        \n        <div className='python-console'>{console}</div>\n        <Game />\n        {Table(weights)}\n    </div>\n  \n  )\n}\n\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}