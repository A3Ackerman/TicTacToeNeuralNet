{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dec = 4;\nconst gameStatus = {\n  XWIN: \"X Wins!\",\n  OWIN: \"O Wins!\",\n  DRAW: \"Draw!\",\n  XN: \"Next Player: X\",\n  ON: \"Next Player: 0\"\n};\n\nfunction Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Tic Tac Toe Neural Net!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The networks consists of a single fully connected layer with a softmax activation function and cross-entropy loss function.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The goal of this project is to train a simple neural net to classify complete games of Tic Tac Toe as \\\"X-Wins\\\", \\\"O-Wins\\\", or \\\"Draw\\\", under the convention that X always plays first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"To expand the problem space beyond the finite number of possible 3x3 Tic Tac Toe boards, Xs and Os are represented by random values in the range \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: \"#99b1f4\"\n        },\n        children: \"(0, 0.5)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 155\n      }, this), \" and \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: \"#e4b5b5\"\n        },\n        children: \"(0.5, 1)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 218\n      }, this), \" respectively.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Intro;\n\nfunction getGameStatus(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (!squares[a] || !squares[b] || !squares[c]) {\n      continue; // skip loop if any of the cells in the line are empty\n    }\n\n    if (squares[a] < 0.5 && squares[b] < 0.5 && squares[c] < 0.5) {\n      return gameStatus.XWIN; // Class X wins\n    } else if (squares[a] >= 0.5 && squares[b] >= 0.5 && squares[c] >= 0.5) {\n      return gameStatus.OWIN; // Class Y wins\n    }\n  }\n\n  if (squares.includes(null)) {\n    if (squares.filter(v => v === null).length % 2) {\n      return gameStatus.XN;\n    } else {\n      return gameStatus.ON;\n    }\n  } else {\n    return gameStatus.DRAW; // Class Draw\n  }\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    disabled: props.i !== null || props.disabled,\n    onClick: props.onClick,\n    style: props.i === 0 ? {\n      background: \"#fff\"\n    } : props.i > 0.5 ? {\n      background: \"#e4b5b5\"\n    } : {\n      background: \"#99b1f4\"\n    },\n    children: props.i ? props.i.toFixed(dec) : props.i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Square;\n\nfunction Board(props) {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [status, setStatus] = useState(gameStatus.XN);\n\n  function handleClick(i) {\n    let sq = squares.slice();\n    sq[i] = status === gameStatus.XN ? Math.random() / 2 : 0.5 + Math.random() / 2;\n    let st = getGameStatus(sq); // update state, but won't take effect until after render\n\n    setSquares(sq);\n    setStatus(st);\n  }\n\n  function saveAndReset() {\n    props.saveBoard(squares);\n    setSquares(Array(9).fill(null));\n    setStatus(gameStatus.XN);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          i: squares[0],\n          onClick: () => handleClick(0),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[1],\n          onClick: () => handleClick(1),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[2],\n          onClick: () => handleClick(2),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          i: squares[3],\n          onClick: () => handleClick(3),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[4],\n          onClick: () => handleClick(4),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[5],\n          onClick: () => handleClick(5),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          i: squares[6],\n          onClick: () => handleClick(6),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[7],\n          onClick: () => handleClick(7),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          i: squares[8],\n          onClick: () => handleClick(8),\n          disabled: !(status === gameStatus.XN || status === gameStatus.ON)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveAndReset(),\n      disabled: status === gameStatus.XN || status === gameStatus.ON,\n      children: \"Add game to Test Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"mIPsuhhtfui49uJ/Vih15/S9G6U=\");\n\n_c3 = Board;\n\nfunction TrainingBoard(board) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"training-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[6]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[7]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = TrainingBoard;\n\nfunction ShowTrainingGames({\n  title,\n  error,\n  games\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"training-boards\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Accuracy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 38\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: error.toFixed(dec)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"board\",\n          children: \"Input Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"label\",\n          children: \"True Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"pred\",\n          children: \"Predicted Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: games.map((g, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"board\",\n          children: TrainingBoard(g.game)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"label\",\n          children: g.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 90\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"pred\",\n          children: g.predicted_class\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 124\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 30\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = ShowTrainingGames;\n\nfunction Table(props) {\n  let weights = props.weights;\n  let bias = props.bias;\n  let dataRows = [];\n  weights.forEach((row, i) => {\n    let cells = [];\n    row.forEach((val, j) => {\n      cells.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        headers: \"weights\",\n        children: val.toFixed(dec)\n      }, i.toString().concat(j.toString()), false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this));\n    });\n    dataRows.push(cells);\n  });\n  let b0 = bias[0] == null ? \"\" : bias[0].toFixed(dec);\n  let b1 = bias[1] == null ? \"\" : bias[1].toFixed(dec);\n  let b2 = bias[2] == null ? \"\" : bias[2].toFixed(dec);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"params-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\",\n            children: \"Bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"weights\",\n            children: \"Weights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class 0 (X Wins)\"\n          }, \"0h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b0\n          }, \"0b\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 58\n          }, this), dataRows[0]]\n        }, \"0r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class 1 (Draw)\"\n          }, \"1h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b1\n          }, '1b', false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 56\n          }, this), dataRows[1]]\n        }, \"1r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class 2 (O Wins)\"\n          }, \"2h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b2\n          }, '2b', false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 58\n          }, this), dataRows[2]]\n        }, \"2r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 7\n  }, this);\n}\n\n_c6 = Table;\n\nfunction RunPythonWithParam(props) {\n  _s2();\n\n  const [N, SetN] = useState(props.default);\n\n  const handleSubmit = e => {\n    props.onSubmit(props.pythonCall + \"(\" + N + \")\");\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"quantity\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"trainN\",\n      name: \"trainN\",\n      min: \"1\",\n      max: \"100\",\n      onChange: e => SetN(e.target.value),\n      value: N\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: props.buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(RunPythonWithParam, \"44u/WHUEzS2csPUiUbzsBSWxPDE=\");\n\n_c7 = RunPythonWithParam;\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nasync function delay(ms) {\n  await new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nfunction App() {\n  _s3();\n\n  const [console, setConsole] = useState('Initializing Python 3.8\\n');\n  const [pythonLoaded, setPythonLoaded] = useState(false);\n  const [data, setData] = useState({\n    WEIGHTS: [],\n    BIASES: [],\n    TRAINING_DATA: [],\n    TEST_DATA: [],\n    TRAINING_ERROR: 1,\n    TEST_ERROR: 1\n  }); //Initialize Python\n\n  useEffect(() => {\n    if (!pythonLoaded) {\n      window.languagePluginLoader.then(() => {\n        setPythonLoaded(true);\n        setConsole(c => c + 'Python Loaded\\n'); //load NeuralNet.py Scripts\n\n        loadNeuralNetScripts().then(() => {\n          setConsole(c => c + 'Neural Net Scripts Loaded\\n');\n          delay(2000).then(() => {\n            setData(window.pyodide.globals.DATA);\n            setConsole(c => c + 'Trainable parameters randomly initialized\\n');\n          });\n        }).catch(err => setConsole(c => c + err + '\\n'));\n      });\n    } else {// update values?\n      //setWeights(window.pyodide.globals.WEIGHTS)\n    }\n  }, [pythonLoaded]);\n\n  function callPython(code) {\n    window.pyodide.runPythonAsync(code).then(output => {\n      setData(window.pyodide.globals.DATA);\n      setConsole(console + output + '\\n');\n    }).catch(err => {\n      setConsole(console + err + '\\n');\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"python-console\",\n      children: console\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RunPythonWithParam, {\n      label: \"Step 1:\",\n      buttonText: \"Generate N Training Games\",\n      default: \"50\",\n      pythonCall: \"generate_n_training_games\",\n      onSubmit: e => callPython(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RunPythonWithParam, {\n      label: \"Step 2:\",\n      buttonText: \"Generate N Test Games\",\n      default: \"20\",\n      pythonCall: \"generate_n_test_games\",\n      onSubmit: e => callPython(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RunPythonWithParam, {\n      label: \"Step 3:\",\n      buttonText: \"Train for N Epochs\",\n      default: \"10\",\n      pythonCall: \"train\",\n      onSubmit: e => callPython(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      weights: data.WEIGHTS,\n      bias: data.BIASES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ShowTrainingGames, {\n        title: \"Training Dataset\",\n        error: data.TRAINING_ERROR,\n        games: data.TRAINING_DATA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShowTrainingGames, {\n        title: \"Test Dataset\",\n        error: data.TEST_ERROR,\n        games: data.TEST_DATA\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n} // ========================================\n\n\n_s3(App, \"cgiV6vE2yytfqdb8oqbiBK407KE=\");\n\n_c8 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"TrainingBoard\");\n$RefreshReg$(_c5, \"ShowTrainingGames\");\n$RefreshReg$(_c6, \"Table\");\n$RefreshReg$(_c7, \"RunPythonWithParam\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","dec","gameStatus","XWIN","OWIN","DRAW","XN","ON","Intro","backgroundColor","getGameStatus","squares","lines","i","length","a","b","c","includes","filter","v","Square","props","disabled","onClick","background","toFixed","Board","setSquares","Array","fill","status","setStatus","handleClick","sq","slice","Math","random","st","saveAndReset","saveBoard","TrainingBoard","board","ShowTrainingGames","title","error","games","map","g","game","label","predicted_class","Table","weights","bias","dataRows","forEach","row","cells","val","j","push","toString","concat","b0","b1","b2","RunPythonWithParam","N","SetN","default","handleSubmit","e","onSubmit","pythonCall","preventDefault","target","value","buttonText","loadNeuralNetScripts","response","fetch","mlcode","text","window","pyodide","runPythonAsync","delay","ms","Promise","resolve","setTimeout","App","console","setConsole","pythonLoaded","setPythonLoaded","data","setData","WEIGHTS","BIASES","TRAINING_DATA","TEST_DATA","TRAINING_ERROR","TEST_ERROR","languagePluginLoader","then","globals","DATA","catch","err","callPython","code","output"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nconst dec = 4\n\ntype boardVal = number | null\ntype boardArray = [boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal]\n\ndeclare global {\n\n  interface game {\n    game: boardArray\n    label: number\n    predicted_class: number\n  }\n\n  interface pythonVars {\n    DATA: {\n      WEIGHTS: number[][]\n      BIASES: number[]\n      TRAINING_DATA: game[]\n      TEST_DATA: game[]\n      TRAINING_ERROR: number\n      TEST_ERROR: number\n    }\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\n\nconst gameStatus = {\n  XWIN: \"X Wins!\",\n  OWIN: \"O Wins!\",\n  DRAW: \"Draw!\",\n  XN: \"Next Player: X\",\n  ON: \"Next Player: 0\"\n}\n\nfunction Intro() {\n  return (\n    <div>\n      <h2>Welcome to the Tic Tac Toe Neural Net!</h2>\n        <p>The networks consists of a single fully connected layer with a softmax activation function and cross-entropy loss function.</p>\n      <p>The goal of this project is to train a simple neural net to classify complete games of Tic Tac Toe as \"X-Wins\", \"O-Wins\", or \"Draw\", under the convention that X always plays first.</p>\n      <p>To expand the problem space beyond the finite number of possible 3x3 Tic Tac Toe boards, Xs and Os are represented by random values in the range <span style={{backgroundColor: \"#99b1f4\"}}>(0, 0.5)</span> and <span style={{backgroundColor:  \"#e4b5b5\"}}>(0.5, 1)</span> respectively.</p>\n  </div>\n  )\n}\n\nfunction getGameStatus(squares: boardArray) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if(!squares[a] || !squares[b] || !squares[c]){\n      continue  // skip loop if any of the cells in the line are empty\n    }\n\n    if (squares[a] < 0.5 && squares[b] < 0.5 && squares[c] < 0.5){\n      return gameStatus.XWIN // Class X wins\n    } else if (squares[a] >= 0.5 && squares[b] >= 0.5 && squares[c] >= 0.5) {\n      return gameStatus.OWIN; // Class Y wins\n    }\n  }\n  if(squares.includes(null)){\n    if(squares.filter(v => v === null).length % 2){\n      return gameStatus.XN\n    } else {\n      return gameStatus.ON\n    }\n  } else {\n    return gameStatus.DRAW // Class Draw\n  }\n}\n\nfunction Square(props: any) {\n\n  return (\n    <button className=\"square\" \n      disabled={props.i !== null || props.disabled} \n      onClick={props.onClick}\n      style={props.i === 0 ? {background: \"#fff\"} : props.i > 0.5 ? {background: \"#e4b5b5\"} : {background: \"#99b1f4\"}}\n      >\n      {props.i ? props.i.toFixed(dec): props.i}\n    </button>\n  )\n}\n\nfunction Board(props: any) {\n\n  const [squares, setSquares] = useState(Array(9).fill(null) as boardArray)\n  const [status, setStatus] = useState(gameStatus.XN)\n\n  function handleClick(i: number){\n    let sq: boardArray = squares.slice() as boardArray\n    sq[i] = status === gameStatus.XN ? Math.random()/2 : 0.5 + Math.random()/2\n    let st = getGameStatus(sq)\n    // update state, but won't take effect until after render\n    setSquares(sq)\n    setStatus(st)\n  }\n\n  function saveAndReset(){\n    props.saveBoard(squares)\n    setSquares(Array(9).fill(null) as boardArray)\n    setStatus(gameStatus.XN)\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          <Square i={squares[0]} onClick={() => handleClick(0)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[1]} onClick={() => handleClick(1)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[2]} onClick={() => handleClick(2)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n        </div>\n        <div className=\"board-row\">\n          <Square i={squares[3]} onClick={() => handleClick(3)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[4]} onClick={() => handleClick(4)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[5]} onClick={() => handleClick(5)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n        </div>\n        <div className=\"board-row\">\n          <Square i={squares[6]} onClick={() => handleClick(6)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[7]} onClick={() => handleClick(7)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n          <Square i={squares[8]} onClick={() => handleClick(8)} disabled={!(status === gameStatus.XN || status === gameStatus.ON)}/>\n        </div>\n      </div>\n      <button onClick={() => saveAndReset()} disabled={status === gameStatus.XN || status === gameStatus.ON}>Add game to Test Dataset</button>\n    </div>\n  );\n}\n\n\nfunction TrainingBoard(board: boardArray) {\n\n  return (\n    <div className='training-board'>\n      <div className=\"board-row\">\n        <Square i={board[0]}/>\n        <Square i={board[1]}/>\n        <Square i={board[2]}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={board[3]}/>\n        <Square i={board[4]}/>\n        <Square i={board[5]}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={board[6]}/>\n        <Square i={board[7]}/>\n        <Square i={board[8]}/>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTrainingGames({title, error, games}: {title: string, error: number, games: game[]}) {\n\n  return (\n    <table className='training-boards'>\n      <thead>\n        <tr><th><h3>{title}</h3></th><th>Accuracy</th><th>{error.toFixed(dec)}</th></tr>\n        <tr>\n        <th id='board'>Input Board</th>\n        <th id='label'>True Class</th>\n        <th id='pred'>Predicted Class</th>\n        </tr>\n      </thead>\n      <tbody>\n        {games.map((g, i) => <tr key={i}><td headers=\"board\">{TrainingBoard(g.game)}</td><td headers='label'>{g.label}</td><td headers='pred'>{g.predicted_class}</td></tr>)} \n      </tbody>\n    </table>\n  )\n\n}\n\n\ntype tableProps = {\n  weights: number[][]\n  bias: number[]\n}\n\nfunction Table(props: any) {\n  let weights = props.weights\n  let bias = props.bias\n  \n  let dataRows: JSX.Element[][] = []\n\n  weights.forEach(\n    (row: number[], i: number) => {\n      let cells: JSX.Element[] = []\n      row.forEach((val: number, j: number) => {\n        cells.push(\n          <td headers='weights' key={i.toString().concat(j.toString())}>{val.toFixed(dec)}</td>\n        )\n      })\n      dataRows.push(cells)\n\n    }\n  )\n  let b0: string = bias[0] == null ? \"\" : bias[0].toFixed(dec)\n  let b1: string = bias[1] == null ? \"\" : bias[1].toFixed(dec)\n  let b2: string = bias[2] == null ? \"\" : bias[2].toFixed(dec)\n\n  return (\n      <div>\n      <table className='params-table'>\n        <thead>\n          <tr>\n            <th id='bias'></th><th id='bias'>Bias</th><th id='weights'>Weights</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr key=\"0r\"><th key=\"0h\">Class 0 (X Wins)</th><td headers='bias' key=\"0b\">{b0}</td>{dataRows[0]}</tr>\n          <tr key=\"1r\"><th key=\"1h\">Class 1 (Draw)</th><td headers='bias' key='1b'>{b1}</td>{dataRows[1]}</tr>\n          <tr key=\"2r\"><th key=\"2h\">Class 2 (O Wins)</th><td headers='bias' key='2b'>{b2}</td>{dataRows[2]}</tr>\n        </tbody>\n      </table>\n    </div>\n    )\n}\n\nfunction RunPythonWithParam(props: any){\n  const [N, SetN] = useState(props.default)\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    props.onSubmit(props.pythonCall + \"(\" + N + \")\")\n    e.preventDefault()\n  }\n\n  return(\n  <form onSubmit={e => handleSubmit(e)}>\n    <label htmlFor=\"quantity\">{props.label}</label>\n    <input type=\"text\" id=\"trainN\" name=\"trainN\" min=\"1\" max=\"100\" onChange={e => SetN(e.target.value)} value={N}/>\n    <input type=\"submit\" value={props.buttonText}/>\n  </form>\n  )\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\nasync function delay(ms: number) {\n  await new Promise<void>(resolve => setTimeout( () => resolve(), ms));\n}\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n  const [data, setData] = useState({\n      WEIGHTS: [] as number[][],\n      BIASES: [] as number[],\n      TRAINING_DATA: [] as game[],\n      TEST_DATA: [] as game[],\n      TRAINING_ERROR: 1 as number,\n      TEST_ERROR: 1 as number\n    } as pythonVars['DATA'])\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded\\n')\n            delay(2000).then(() => {\n              setData(window.pyodide.globals.DATA)\n              setConsole(c => c + 'Trainable parameters randomly initialized\\n')\n          })\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }  else {\n        // update values?\n        //setWeights(window.pyodide.globals.WEIGHTS)\n      }\n    }, [pythonLoaded])\n\n    function callPython(code: string){\n      window.pyodide.runPythonAsync(code)\n        .then((output: string)=> {\n          setData(window.pyodide.globals.DATA)\n          setConsole(console + output + '\\n')\n        })\n        .catch((err: string) => {\n            setConsole(console + err + '\\n')\n        });\n    }\n\n  return (\n    <div className=\"App\">\n      <Intro />     \n      <div className='python-console'>{console}</div>\n      <RunPythonWithParam label=\"Step 1:\" buttonText=\"Generate N Training Games\" default=\"50\" pythonCall=\"generate_n_training_games\" onSubmit={(e: string) => callPython(e)}/>\n      <RunPythonWithParam label=\"Step 2:\" buttonText=\"Generate N Test Games\" default=\"20\" pythonCall=\"generate_n_test_games\" onSubmit={(e: string) => callPython(e)}/>\n      <RunPythonWithParam label=\"Step 3:\" buttonText=\"Train for N Epochs\" default=\"10\" pythonCall=\"train\" onSubmit={(e: string) => callPython(e)}/>\n      {/* <Board saveBoard={(b: boardArray) => saveBoard(b)}/> */}\n      <Table weights={data.WEIGHTS} bias={data.BIASES}/>\n      <div>\n        <ShowTrainingGames title={\"Training Dataset\"} error={data.TRAINING_ERROR} games={data.TRAINING_DATA}/>\n        <ShowTrainingGames title={\"Test Dataset\"} error={data.TEST_ERROR} games={data.TEST_DATA}/>\n      </div>\n    </div>\n  \n  )\n}\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}