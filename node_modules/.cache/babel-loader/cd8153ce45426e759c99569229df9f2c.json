{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dec = 4;\n\nlet train_data = require('./train_data.json');\n\nlet test_data = require('./test_data.json');\n\nconst gameStatus = {\n  XWIN: \"X Wins!\",\n  OWIN: \"O Wins!\",\n  DRAW: \"Draw!\",\n  XN: \"Next Player: X\",\n  ON: \"Next Player: 0\"\n};\n\nfunction Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Tic Tac Toe Neural Net!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The networks consists of a single fully connected layer with a sigmoid activation function and cross-entropy loss function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The goal of this project is to train a simple neural net to classify complete games of Tic Tac Toe as \\\"X-Wins\\\", \\\"O-Wins\\\", or \\\"Draw\\\".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"To expand the problem space beyond the finite number of possible 3x3 Tic Tac Toe boards, Xs and Os are represented by random values in the range (0, 0.5) and (0.5, 1) respectively.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Intro;\n\nfunction updateGameStatus(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (!squares[a] || !squares[b] || !squares[c]) {\n      continue; // skip loop if any of the cells in the line are empty\n    }\n\n    if (squares[a] < 0.5 && squares[b] < 0.5 && squares[c] < 0.5) {\n      return gameStatus.XWIN; // Class X wins\n    } else if (squares[a] >= 0.5 && squares[b] >= 0.5 && squares[c] >= 0.5) {\n      return gameStatus.OWIN; // Class Y wins\n    }\n  }\n\n  if (squares.includes(null)) {\n    if (squares.filter(v => v === null).length % 2) {\n      return gameStatus.XN;\n    } else {\n      return gameStatus.ON;\n    }\n  } else {\n    return gameStatus.DRAW; // Class Draw\n  }\n}\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    disabled: props.i !== null || props.disabled,\n    onClick: props.onClick,\n    style: props.i === null ? {\n      background: \"#fff\"\n    } : props.i > 0.5 ? {\n      background: \"#e4b5b5\"\n    } : {\n      background: \"#99b1f4\"\n    },\n    children: props.i ? props.i.toFixed(dec) : props.i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Square;\n\nfunction Board() {\n  _s();\n\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [status, setStatus] = useState(gameStatus.XN);\n\n  function handleClick(i) {\n    let sq = squares.slice();\n    sq[i] = status === gameStatus.XN ? Math.random() / 2 : 0.5 + Math.random() / 2;\n    let st = updateGameStatus(sq); // update state, but won't take effect until after render\n\n    setSquares(sq);\n    setStatus(st);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: squares[0],\n        onClick: () => handleClick(0),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[1],\n        onClick: () => handleClick(1),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[2],\n        onClick: () => handleClick(2),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: squares[3],\n        onClick: () => handleClick(3),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[4],\n        onClick: () => handleClick(4),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[5],\n        onClick: () => handleClick(5),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: squares[6],\n        onClick: () => handleClick(6),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[7],\n        onClick: () => handleClick(7),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: squares[8],\n        onClick: () => handleClick(8),\n        disabled: !(status == gameStatus.XN || status == gameStatus.ON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Board, \"mIPsuhhtfui49uJ/Vih15/S9G6U=\");\n\n_c3 = Board;\n\nfunction Game() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Game;\n\nfunction TrainingBoard(board) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"training-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        i: board[6]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[7]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        i: board[8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = TrainingBoard;\n\nfunction ShowTrainingBoards({\n  title,\n  boards\n}) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"training-boards\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"board\",\n          children: \"Input Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"label\",\n          children: \"True Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          id: \"pred\",\n          children: \"Predicted Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: boards.map((x, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"board\",\n          children: TrainingBoard(x.game)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"label\",\n          children: x.class\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 91\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          headers: \"pred\",\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 125\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_c6 = ShowTrainingBoards;\n\nfunction Table({\n  weights,\n  bias\n}) {\n  const dec = 4;\n  let dataRows = [];\n  weights.forEach((row, i) => {\n    let cells = [];\n    row.forEach((val, j) => {\n      cells.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        headers: \"weights\",\n        children: val.toFixed(dec)\n      }, i.toString().concat(j.toString()), false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this));\n    });\n    dataRows.push(cells);\n  });\n  let b0 = bias[0] == null ? \"\" : parseFloat(bias[0]).toFixed(dec);\n  let b1 = bias[1] == null ? \"\" : parseFloat(bias[1]).toFixed(dec);\n  let b2 = bias[2] == null ? \"\" : parseFloat(bias[2]).toFixed(dec);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"params-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\",\n            children: \"Bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"weights\",\n            children: \"Weights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class X Wins\"\n          }, \"0h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b0\n          }, \"0b\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 54\n          }, this), dataRows[0]]\n        }, \"0r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class Y Wins\"\n          }, \"1h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b1\n          }, '1b', false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 54\n          }, this), dataRows[1]]\n        }, \"1r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class Draw\"\n          }, \"2h\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            headers: \"bias\",\n            children: b2\n          }, '2b', false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 52\n          }, this), dataRows[2]]\n        }, \"2r\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 7\n  }, this);\n}\n\n_c7 = Table;\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nasync function delay(ms) {\n  await new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nfunction App() {\n  _s2();\n\n  const [console, setConsole] = useState('Initializing Python 3.8\\n');\n  const [pythonLoaded, setPythonLoaded] = useState(false);\n  const [weights, setWeights] = useState([[], [], []]);\n  const [bias, setBias] = useState([]); //Initialize Python\n\n  useEffect(() => {\n    if (!pythonLoaded) {\n      window.languagePluginLoader.then(() => {\n        setPythonLoaded(true);\n        setConsole(c => c + 'Python Loaded\\n'); //load NeuralNet.py Scripts\n\n        loadNeuralNetScripts().then(() => {\n          setConsole(c => c + 'Neural Net Scripts Loaded\\n');\n          delay(2000).then(() => {\n            setWeights(window.pyodide.globals.WEIGHTS);\n            setBias(window.pyodide.globals.BIASES);\n            setConsole(c => c + 'Trainable parameters randomly initialized\\n');\n          });\n        }).catch(err => setConsole(c => c + err + '\\n'));\n      });\n    } else {// update values?\n      //setWeights(window.pyodide.globals.WEIGHTS)\n    }\n  }, [pythonLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"python-console\",\n      children: console\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      weights: weights,\n      bias: bias\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ShowTrainingBoards, {\n        title: \"Training Dataset\",\n        boards: train_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ShowTrainingBoards, {\n        title: \"Test Dataset\",\n        boards: test_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n} // ========================================\n\n\n_s2(App, \"q89IlA7lhsrt4EsbS1yQvZ6eVs0=\");\n\n_c8 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Game\");\n$RefreshReg$(_c5, \"TrainingBoard\");\n$RefreshReg$(_c6, \"ShowTrainingBoards\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","dec","train_data","require","test_data","gameStatus","XWIN","OWIN","DRAW","XN","ON","Intro","updateGameStatus","squares","lines","i","length","a","b","c","includes","filter","v","Square","props","disabled","onClick","background","toFixed","Board","setSquares","Array","fill","status","setStatus","handleClick","sq","slice","Math","random","st","Game","TrainingBoard","board","ShowTrainingBoards","title","boards","map","x","game","class","Table","weights","bias","dataRows","forEach","row","cells","val","j","push","toString","concat","b0","parseFloat","b1","b2","loadNeuralNetScripts","response","fetch","mlcode","text","window","pyodide","runPythonAsync","delay","ms","Promise","resolve","setTimeout","App","console","setConsole","pythonLoaded","setPythonLoaded","setWeights","setBias","languagePluginLoader","then","globals","WEIGHTS","BIASES","catch","err"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nconst dec = 4\nlet train_data = require('./train_data.json');\nlet test_data = require('./test_data.json');\n\n\ndeclare global {\n\n  interface pythonVars {\n    WEIGHTS: number[][]\n    BIASES: string[]\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\ntype boardVal = number | null\ntype boardArray = [boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal, boardVal]\nconst gameStatus = {\n  XWIN: \"X Wins!\",\n  OWIN: \"O Wins!\",\n  DRAW: \"Draw!\",\n  XN: \"Next Player: X\",\n  ON: \"Next Player: 0\"\n}\n\nfunction Intro() {\n  return (\n    <div>\n      <h2>Welcome to the Tic Tac Toe Neural Net!</h2>\n        <p>The networks consists of a single fully connected layer with a sigmoid activation function and cross-entropy loss function</p>\n      <p>The goal of this project is to train a simple neural net to classify complete games of Tic Tac Toe as \"X-Wins\", \"O-Wins\", or \"Draw\".</p>\n      <p>To expand the problem space beyond the finite number of possible 3x3 Tic Tac Toe boards, Xs and Os are represented by random values in the range (0, 0.5) and (0.5, 1) respectively.</p>\n  </div>\n  )\n}\n\nfunction updateGameStatus(squares: boardArray) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if(!squares[a] || !squares[b] || !squares[c]){\n      continue  // skip loop if any of the cells in the line are empty\n    }\n\n    if (squares[a] < 0.5 && squares[b] < 0.5 && squares[c] < 0.5){\n      return gameStatus.XWIN // Class X wins\n    } else if (squares[a] >= 0.5 && squares[b] >= 0.5 && squares[c] >= 0.5) {\n      return gameStatus.OWIN; // Class Y wins\n    }\n  }\n  if(squares.includes(null)){\n    if(squares.filter(v => v === null).length % 2){\n      return gameStatus.XN\n    } else {\n      return gameStatus.ON\n    }\n  } else {\n    return gameStatus.DRAW // Class Draw\n  }\n}\n\nfunction Square(props: any) {\n\n  return (\n    <button className=\"square\" \n      disabled={props.i !== null || props.disabled} \n      onClick={props.onClick}\n      style={props.i === null ? {background: \"#fff\"} : props.i > 0.5 ? {background: \"#e4b5b5\"} : {background: \"#99b1f4\"}}\n      >\n      {props.i ? props.i.toFixed(dec): props.i}\n    </button>\n  )\n}\n\nfunction Board() {\n\n  const [squares, setSquares] = useState(Array(9).fill(null) as boardArray)\n  const [status, setStatus] = useState(gameStatus.XN)\n\n  function handleClick(i: number){\n    let sq: boardArray = squares.slice() as boardArray\n    sq[i] = status === gameStatus.XN ? Math.random()/2 : 0.5 + Math.random()/2\n    let st = updateGameStatus(sq)\n    // update state, but won't take effect until after render\n    setSquares(sq)\n    setStatus(st)\n  }\n\n  return (\n    <div className=\"game-board\">\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square i={squares[0]} onClick={() => handleClick(0)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[1]} onClick={() => handleClick(1)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[2]} onClick={() => handleClick(2)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={squares[3]} onClick={() => handleClick(3)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[4]} onClick={() => handleClick(4)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[5]} onClick={() => handleClick(5)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={squares[6]} onClick={() => handleClick(6)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[7]} onClick={() => handleClick(7)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n        <Square i={squares[8]} onClick={() => handleClick(8)} disabled={!(status == gameStatus.XN || status == gameStatus.ON)}/>\n      </div>\n    </div>\n  );\n}\n\nfunction Game(){\n  return (\n    <div className=\"game\">\n      <Board /> \n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction TrainingBoard(board: boardArray) {\n\n  return (\n    <div className='training-board'>\n      <div className=\"board-row\">\n        <Square i={board[0]}/>\n        <Square i={board[1]}/>\n        <Square i={board[2]}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={board[3]}/>\n        <Square i={board[4]}/>\n        <Square i={board[5]}/>\n      </div>\n      <div className=\"board-row\">\n        <Square i={board[6]}/>\n        <Square i={board[7]}/>\n        <Square i={board[8]}/>\n      </div>\n    </div>\n  );\n}\n\n\ntype json_board = {game: boardArray, class: number}\n\nfunction ShowTrainingBoards({title, boards}: {title: string, boards: json_board[]}) {\n\n  return (\n    <table className='training-boards'>\n      <thead>\n        <tr><th><h3>{title}</h3></th></tr>\n        <tr>\n        <th id='board'>Input Board</th>\n        <th id='label'>True Class</th>\n        <th id='pred'>Predicted Class</th>\n        </tr>\n      </thead>\n      <tbody>\n        {boards.map((x, i) => <tr key={i}><td headers=\"board\">{TrainingBoard(x.game)}</td><td headers='label'>{x.class}</td><td headers='pred'>None</td></tr>)} \n      </tbody>\n    </table>\n  )\n\n}\n\n\ntype tableProps = {\n  weights: number[][]\n  bias: string[]\n}\n\nfunction Table({weights, bias} : tableProps) {\n  const dec = 4\n  \n  let dataRows: JSX.Element[][] = []\n\n  weights.forEach(\n    (row, i) => {\n      let cells: JSX.Element[] = []\n      row.forEach((val, j) => {\n        cells.push(\n          <td headers='weights' key={i.toString().concat(j.toString())}>{val.toFixed(dec)}</td>\n        )\n      })\n      dataRows.push(cells)\n\n    }\n  )\n  let b0: string = bias[0] == null ? \"\" : parseFloat(bias[0]).toFixed(dec)\n  let b1: string = bias[1] == null ? \"\" : parseFloat(bias[1]).toFixed(dec)\n  let b2: string = bias[2] == null ? \"\" : parseFloat(bias[2]).toFixed(dec)\n\n  return (\n      <div>\n      <table className='params-table'>\n        <thead>\n          <tr>\n            <th id='bias'></th><th id='bias'>Bias</th><th id='weights'>Weights</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr key=\"0r\"><th key=\"0h\">Class X Wins</th><td headers='bias' key=\"0b\">{b0}</td>{dataRows[0]}</tr>\n          <tr key=\"1r\"><th key=\"1h\">Class Y Wins</th><td headers='bias' key='1b'>{b1}</td>{dataRows[1]}</tr>\n          <tr key=\"2r\"><th key=\"2h\">Class Draw</th><td headers='bias' key='2b'>{b2}</td>{dataRows[2]}</tr>\n        </tbody>\n      </table>\n    </div>\n    )\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\nasync function delay(ms: number) {\n  await new Promise<void>(resolve => setTimeout( () => resolve(), ms));\n}\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n  const [weights, setWeights] = useState([[],[],[]] as number[][])\n  const [bias, setBias] = useState([] as string[])\n\n\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded\\n')\n            delay(2000).then(() => {\n              setWeights(window.pyodide.globals.WEIGHTS)\n              setBias(window.pyodide.globals.BIASES)\n              setConsole(c => c + 'Trainable parameters randomly initialized\\n')\n          })\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }  else {\n        // update values?\n        //setWeights(window.pyodide.globals.WEIGHTS)\n      }\n    }, [pythonLoaded])\n\n\n  return (\n    <div className=\"App\">\n      <Intro />     \n      <div className='python-console'>{console}</div>\n      <Game />\n      <Table weights={weights} bias={bias}/>\n      <div>\n        <ShowTrainingBoards title={\"Training Dataset\"} boards={train_data}/>\n        <ShowTrainingBoards title={\"Test Dataset\"} boards={test_data}/>\n      </div>\n    </div>\n  \n  )\n}\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}