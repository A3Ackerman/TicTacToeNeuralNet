{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nwindow.languagePluginLoader.then(() => {\n  //load NeuralNet.py Scripts\n  loadNeuralNetScripts().then(() => {}).catch(err => console.log(err));\n}).then(() => ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 7\n}, this), document.getElementById('root')));","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/index.tsx"],"names":["React","ReactDOM","App","loadNeuralNetScripts","response","fetch","mlcode","text","window","pyodide","runPythonAsync","languagePluginLoader","then","catch","err","console","log","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAIA,eAAeC,oBAAf,GAAuC;AACrC,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA1B;AACA,MAAIC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeC,cAAf,CAA8BJ,MAA9B;AACD;;AAEDE,MAAM,CAACG,oBAAP,CAA4BC,IAA5B,CAAiC,MAAM;AACnC;AACAT,EAAAA,oBAAoB,GAAGS,IAAvB,CAA4B,MAAM,CAC/B,CADH,EACKC,KADL,CACYC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAD3B;AAEC,CAJL,EAIOF,IAJP,CAIY,MAERX,QAAQ,CAACgB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,CANJ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\nwindow.languagePluginLoader.then(() => {\n    //load NeuralNet.py Scripts\n    loadNeuralNetScripts().then(() => {\n      }).catch((err: Error) => console.log(err))\n    }).then(() => \n\n    ReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n      document.getElementById('root')\n    )\n    )\n\n"]},"metadata":{},"sourceType":"module"}