{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(i) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    children: i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction Board() {\n  const status = 'Next player: X';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(0), Square(1), Square(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(3), Square(4), Square(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(6), Square(7), Square(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Board;\n\nfunction Game() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Game;\n\nfunction DisplaySquare(i) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    children: i\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = DisplaySquare;\n\nfunction DisplayBoard() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(0), Square(1), Square(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(3), Square(4), Square(5)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [Square(6), Square(7), Square(8)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = DisplayBoard;\n\nfunction DisplayGame() {\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"display-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this);\n}\n\n_c6 = DisplayGame;\n\nfunction Table({\n  weights,\n  bias\n}) {\n  const dec = 4;\n  let dataRows = [];\n  weights.forEach(row => {\n    let cells = [];\n    row.forEach(val => {\n      cells.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        headers: \"weights\",\n        children: val.toFixed(dec)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this));\n    });\n    dataRows.push(cells);\n  });\n  let b0 = bias[0] == null ? \"\" : parseFloat(bias[0]).toFixed(dec);\n  let b1 = bias[1] == null ? \"\" : parseFloat(bias[1]).toFixed(dec);\n  let b2 = bias[2] == null ? \"\" : parseFloat(bias[2]).toFixed(dec);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"params-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"bias\",\n            children: \"Bias\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            id: \"weights\",\n            children: \"Weights\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class X Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b0\n          }, 'bias', false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 36\n          }, this), dataRows[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class Y Wins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b1\n          }, 'bias', false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this), dataRows[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class Draw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: b2\n          }, 'bias', false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 34\n          }, this), dataRows[2]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 7\n  }, this);\n}\n\n_c7 = Table;\n\nasync function loadNeuralNetScripts() {\n  let response = await fetch('./NeuralNet.py');\n  let mlcode = await response.text();\n  window.pyodide.runPythonAsync(mlcode);\n}\n\nasync function delay(ms) {\n  await new Promise(resolve => setTimeout(() => resolve(), ms));\n}\n\nfunction App() {\n  _s();\n\n  const [console, setConsole] = useState('Initializing Python 3.8\\n');\n  const [pythonLoaded, setPythonLoaded] = useState(false);\n  const [weights, setWeights] = useState([[], [], []]);\n  const [bias, setBias] = useState([]); //Initialize Python\n\n  useEffect(() => {\n    if (!pythonLoaded) {\n      window.languagePluginLoader.then(() => {\n        setPythonLoaded(true);\n        setConsole(c => c + 'Python Loaded\\n'); //load NeuralNet.py Scripts\n\n        loadNeuralNetScripts().then(() => {\n          setConsole(c => c + 'Neural Net Scripts Loaded\\n');\n          delay(2000).then(() => {\n            setWeights(window.pyodide.globals.WEIGHTS);\n            setBias(window.pyodide.globals.BIASES);\n            setConsole(c => c + 'Trainable parameters randomly initialized\\n');\n          });\n        }).catch(err => setConsole(c => c + err + '\\n'));\n      });\n    } else {// update values?\n      //setWeights(window.pyodide.globals.WEIGHTS)\n    }\n  }, [pythonLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"python-console\",\n      children: console\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      weights: weights,\n      bias: bias\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n} // ========================================\n\n\n_s(App, \"q89IlA7lhsrt4EsbS1yQvZ6eVs0=\");\n\n_c8 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");\n$RefreshReg$(_c4, \"DisplaySquare\");\n$RefreshReg$(_c5, \"DisplayBoard\");\n$RefreshReg$(_c6, \"DisplayGame\");\n$RefreshReg$(_c7, \"Table\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"sources":["/Users/alexanderackerman/Code/TicTacToeNeuralNet/src/App.tsx"],"names":["React","useState","useEffect","Square","i","Board","status","Game","DisplaySquare","DisplayBoard","DisplayGame","Table","weights","bias","dec","dataRows","forEach","row","cells","val","push","toFixed","b0","parseFloat","b1","b2","loadNeuralNetScripts","response","fetch","mlcode","text","window","pyodide","runPythonAsync","delay","ms","Promise","resolve","setTimeout","App","console","setConsole","pythonLoaded","setPythonLoaded","setWeights","setBias","languagePluginLoader","then","c","globals","WEIGHTS","BIASES","catch","err"],"mappings":"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","sourcesContent":["import './App.css'\n\nimport React, {useState, useEffect} from 'react'\n\n/* React code below based on https://reactjs.org/tutorial/tutorial.html */\n\ndeclare global {\n\n  interface pythonVars {\n    WEIGHTS: number[][]\n    BIASES: string[]\n  }\n\n  interface Pyodide {\n    runPythonAsync: any\n    globals: pythonVars\n  }\n\n  interface Window {\n    languagePluginLoader: any\n    pyodide: Pyodide\n  }\n}\n\nfunction Square(i: number) {\n  return (\n    <button className=\"square\">\n      {i}\n    </button>\n  );\n}\n\nfunction Board() {\n  const status = 'Next player: X';\n\n  return (\n    <div>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        {Square(0)}\n        {Square(1)}\n        {Square(2)}\n      </div>\n      <div className=\"board-row\">\n        {Square(3)}\n        {Square(4)}\n        {Square(5)}\n      </div>\n      <div className=\"board-row\">\n        {Square(6)}\n        {Square(7)}\n        {Square(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction Game(){\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\nfunction DisplaySquare(i: number) {\n  return (\n    <button className=\"square\">\n      {i}\n    </button>\n  );\n}\n\nfunction DisplayBoard() {\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {Square(0)}\n        {Square(1)}\n        {Square(2)}\n      </div>\n      <div className=\"board-row\">\n        {Square(3)}\n        {Square(4)}\n        {Square(5)}\n      </div>\n      <div className=\"board-row\">\n        {Square(6)}\n        {Square(7)}\n        {Square(8)}\n      </div>\n    </div>\n  );\n}\n\nfunction DisplayGame(){\n  <div className=\"display-game\">\n  <div className=\"display-board\">\n    <Board />\n  </div>\n  <div className=\"game-info\">\n    <div>{/* labeled winner */}</div>\n    <ol>{/* classified winner */}</ol>\n  </div>\n</div>\n}\n\n\ntype tableProps = {\n  weights: number[][]\n  bias: string[]\n}\n\nfunction Table({weights, bias} : tableProps) {\n  const dec = 4\n  \n  let dataRows: JSX.Element[][] = []\n\n  weights.forEach(\n    row => {\n      let cells: JSX.Element[] = []\n      row.forEach(val => {\n        cells.push(\n          <td headers='weights'>{val.toFixed(dec)}</td>\n        )\n      })\n      dataRows.push(cells)\n\n    }\n  )\n  let b0: string = bias[0] == null ? \"\" : parseFloat(bias[0]).toFixed(dec)\n  let b1: string = bias[1] == null ? \"\" : parseFloat(bias[1]).toFixed(dec)\n  let b2: string = bias[2] == null ? \"\" : parseFloat(bias[2]).toFixed(dec)\n\n  return (\n      <div>\n      <table className='params-table'>\n        <thead>\n          <tr>\n            <th id='bias'></th><th id='bias'>Bias</th><th id='weights'>Weights</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr><th>Class X Wins</th><td key='bias'>{b0}</td>{dataRows[0]}</tr>\n          <tr><th>Class Y Wins</th><td key='bias'>{b1}</td>{dataRows[1]}</tr>\n          <tr><th>Class Draw</th><td key='bias'>{b2}</td>{dataRows[2]}</tr>\n        </tbody>\n      </table>\n    </div>\n    )\n}\n\nasync function loadNeuralNetScripts()  {\n  let response = await fetch('./NeuralNet.py')\n  let mlcode = await response.text()\n  window.pyodide.runPythonAsync(mlcode)\n}\n\nasync function delay(ms: number) {\n  await new Promise<void>(resolve => setTimeout( () => resolve(), ms));\n}\n\nfunction App() {\n  const [console, setConsole] = useState('Initializing Python 3.8\\n')\n  const [pythonLoaded, setPythonLoaded] = useState(false)\n  const [weights, setWeights] = useState([[],[],[]] as number[][])\n  const [bias, setBias] = useState([] as string[])\n\n  //Initialize Python\n  useEffect(() => {\n      if(!pythonLoaded){\n        window.languagePluginLoader.then(() => {\n          setPythonLoaded(true)\n          setConsole(c => c + 'Python Loaded\\n')\n\n          //load NeuralNet.py Scripts\n          loadNeuralNetScripts().then(() => {\n            setConsole(c => c + 'Neural Net Scripts Loaded\\n')\n            delay(2000).then(() => {\n              setWeights(window.pyodide.globals.WEIGHTS)\n              setBias(window.pyodide.globals.BIASES)\n              setConsole(c => c + 'Trainable parameters randomly initialized\\n')\n          })\n          }).catch((err: Error) => setConsole(c => c + err + '\\n'))\n        })\n      }  else {\n        // update values?\n        //setWeights(window.pyodide.globals.WEIGHTS)\n      }\n    }, [pythonLoaded])\n\n  return (\n    <div className=\"App\">        \n        <div className='python-console'>{console}</div>\n        <Game />\n        <Table weights={weights} bias={bias}/>\n    </div>\n  \n  )\n}\n\n\n// ========================================\n\nexport default App;"]},"metadata":{},"sourceType":"module"}